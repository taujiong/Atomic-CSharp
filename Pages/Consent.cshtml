@page
@using IdentityServer4.Extensions
@model Atomic.UnifiedAuth.Pages.ConsentPageModel

@if (Model.ConsentClient.ClientLogoUrl != null)
{
  <div class="is-mobile level mb-4">
    <div class="level-left logo-client-wrapper">
      <svg aria-hidden="true" class="logo-client">
        <use xlink:href="#icon-guard"></use>
      </svg>
    </div>
    <div class="connection">
      <svg aria-hidden="true" class="icon-tick">
        <use xlink:href="#icon-success"></use>
      </svg>
    </div>
    <div class="logo-client-wrapper">
      <img alt="ClientLogo" class="logo-client"
           src="@Model.ConsentClient.ClientLogoUrl">
    </div>
  </div>
}

<div class="has-text-centered mb-4">
  <div class="has-text-dark has-text-weight-medium is-size-4">
    @Model.ConsentClient.ClientName
  </div>
  <div class="has-text-grey">
    @_localizer["wants to access your account:"]
    <span class="has-text-weight-bold">
      @Model.UserName
    </span>
  </div>
</div>

<form method="post">
  <input asp-for="ReturnUrl" />

  <div class="box is-radiusless mb-4 px-0 py-0">
    @if (!Model.Input.IdentityScopes.IsNullOrEmpty())
    {
      <div class="has-background-grey-lighter is-mobile level mb-2 px-2">
        <div class="level-left">
          <svg aria-hidden="true" class="icon is-small mr-2">
            <use xlink:href="#icon-person"></use>
          </svg>
          <h3>@_localizer["Personal Information"]</h3>
        </div>
      </div>

      <ul class="m-2">
        @for (var i = 0; i < Model.Input.IdentityScopes.Count; i++)
        {
          <li class="mt-2">
            <label asp-for="@Model.Input.IdentityScopes[i].Checked"
                   class="level-left">
              <input asp-for="@Model.Input.IdentityScopes[i].Checked"
                     class="mr-1" />
              @Model.Input.IdentityScopes[i].DisplayName
              @if (Model.Input.IdentityScopes[i].Required)
              {
                <span style="color: red">*</span>
              }
            </label>
            <input asp-for="@Model.Input.IdentityScopes[i].Name" />
          </li>
        }
      </ul>
    }

    @if (!Model.Input.ApiScopes.IsNullOrEmpty())
    {
      <div class="has-background-grey-lighter is-mobile level mb-2 px-2">
        <div class="level-left">
          <svg aria-hidden="true" class="icon is-small mr-2">
            <use xlink:href="#icon-app"></use>
          </svg>
          <h3>@_localizer["Application Access"]</h3>
        </div>
      </div>

      <ul class="m-2 pb-2">
        @for (var i = 0; i < Model.Input.ApiScopes.Count; i++)
        {
          <li class="mt-2">
            <label asp-for="@Model.Input.ApiScopes[i].Checked"
                   class="level-left">
              <input asp-for="@Model.Input.ApiScopes[i].Checked"
                     class="mr-1" />
              @Model.Input.ApiScopes[i].DisplayName
              @if (Model.Input.ApiScopes[i].Required)
              {
                <span style="color: red">*</span>
              }
            </label>
            <input asp-for="@Model.Input.ApiScopes[i].Name" />
          </li>
        }
      </ul>
    }
  </div>

  @if (Model.ConsentClient.AllowRememberConsent)
  {
    <label asp-for="@Model.Input.RememberConsent"
           class="level-left ml-2">
      <input asp-for="@Model.Input.RememberConsent" />
      <strong>@_localizer["Remember My Decision"]</strong>
    </label>
  }

  <div class="mt-4 has-text-centered">
    <button class="button is-primary mr-2"
            name="UserDecision"
            value="yes">
      @_localizer["Yes, allow"]
    </button>
    <button class="button"
            name="UserDecision"
            value="no">
      @_localizer["No, refuse"]
    </button>
  </div>
</form>
